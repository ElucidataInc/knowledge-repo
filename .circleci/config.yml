
# Script for CD of Knowledge Repo (KR) deployment on Elastic Beanstalk (EB)
# Method: Native approach - direct deployment, without docker.
#   > For Docker approach config, refer to: 
#       1 https://github.com/ElucidataInc/knowledge-repo/blob/10f0fb134fee6466971000b4e57f8033cc9920c8/.circleci/config.yml
#       2 https://github.com/ElucidataInc/knowledge-repo/blob/e1555583952fccffa6315b1096128202d59c4743/eb_utils/Dockerrun_notag.aws.json
#
# Basic Functions:
#   1 Pull the updated KR code
#   2 Deploy on eb
#     2.1 Install awsebcli
#     2.2 Substitute environment variables using envsubst
#     2.3 Deploy
#
# To Do:
#   > Consider - updating elucidpulkit/ubunturpollyci to include awsebcli?

# CircleCI 2.1 configuration file
---
version: 2.1

aliases:
  # Variables.
  # For YAML support of anchors and references,
  # @see http://blog.daemonl.com/2016/02/yaml.html
  - &app_workspace_dir  ~/knowledge-repo

defaults: &defaults
  working_directory: *app_workspace_dir
  docker:
    # Using Amazon Linux for Serverless code packaging
    - image: elucidpulkit/ubunturpollyci
      auth:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD

jobs:
  Build:
    <<: *defaults
    steps:
      - checkout
      # Docker setting up
      - setup_remote_docker:
          version: 17.05.0-ce

      - run:
          name: Configuring aws dev credentials
          command: |
            aws configure set aws_access_key_id $DEV_AWS_ACCESS_KEY_ID --profile dev
            aws configure set aws_secret_access_key $DEV_AWS_SECRET_KEY --profile dev
      - run:
          name: Configuring aws test credentials
          command: |
            aws configure set aws_access_key_id $TEST_AWS_ACCESS_KEY_ID --profile test
            aws configure set aws_secret_access_key $TEST_AWS_SECRET_KEY --profile test

      - run:
          name: Configuring aws prod credentials
          command: |
            aws configure set aws_access_key_id $PROD_AWS_ACCESS_KEY_ID --profile prod
            aws configure set aws_secret_access_key $PROD_AWS_SECRET_KEY --profile prod

      # - run:
      #     name: git install
      #     command: |
      #       apt-get update
      #       apt install git -y
      #       which git

      - run:
          name: Install dependencies
          command: |
            virtualenv -p python3 venv
            . venv/bin/activate
            pip install awsebcli

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/${CIRCLE_PROJECT_REPONAME}.tar

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            if [[ -e /caches/${CIRCLE_PROJECT_REPONAME}.tar ]]; then  docker load -i /caches/${CIRCLE_PROJECT_REPONAME}.tar; fi

      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/${CIRCLE_PROJECT_REPONAME}.tar

      - persist_to_workspace:
          root: ~/.
          paths: .

  deploy: &deploy
    <<: *defaults
    parameters:
      EB_ENV_NAME:
        type: string
        default: DEV_EB_ENV_NAME
      CONFIG_FILE:
        type: string
        default: DEV_CONFIG_FILE
      ENV:
        type: string
        default: Devpolly
      PROFILE:
        type: string
        default: dev

    steps:
      - attach_workspace:
          at: ~/.

      - run:
          name: git install
          command: |
            apt-get update
            apt install git -y

      - run:
          name: Push to << parameters.ENV >>
          command: |
            . venv/bin/activate
            cp -R eb_utils/.elasticbeanstalk ./.
            cd .elasticbeanstalk/ && envsubst < << parameters.CONFIG_FILE >>.yml > config.yml && cd ..
            # Deploy to eb
            eb deploy $<< parameters.EB_ENV_NAME >> --profile  << parameters.PROFILE >>
      - persist_to_workspace:
          root: ~/.
          paths: .


  polly:
    <<: *deploy
  testpolly:
    <<: *deploy
  devpolly:
    <<: *deploy
workflows:
  version: 2

  build_process:
    jobs:
      - Build:
          context: el-git-vars

      - devpolly:
          context: el-git-vars
          requires:
            - Build
          filters:
            branches:
              only:
                - /.*_dev/
                - develop
      - hold_for_testpolly:
          type: approval
          requires:
            - Build
          filters:
            branches:
              only: develop
      - testpolly:
          context: el-git-vars
          EB_ENV_NAME: TEST_EB_ENV_NAME
          CONFIG_FILE: TEST_CONFIG_FILE
          ENV: Testpolly
          PROFILE: test
          requires:
            - hold_for_testpolly
      # - hold_for_polly:
      #     type: approval
      #     requires:
      #       - Build
      #     filters:
      #       branches:
      #         only: master
      # - polly:
      #     context: el-git-vars
      #     EB_ENV_NAME: PROD_EB_ENV_NAME
      #     CONFIG_FILE: PROD_CONFIG_FILE
      #     ENV: Polly
      #     PROFILE: prod
      #     requires:
      #       - hold_for_polly
